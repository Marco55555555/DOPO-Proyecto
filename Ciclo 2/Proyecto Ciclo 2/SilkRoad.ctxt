#BlueJ class context
comment0.target=SilkRoad
comment0.text=\r\n\ Representa\ una\ espiral\ de\ celdas\ (Silk\ Road),\ donde\ cada\ celda\ puede\ contener\r\n\ robots\ o\ tiendas.\ \r\n\ \r\n\ La\ espiral\ se\ genera\ autom\u00E1ticamente\ en\ el\ constructor\ y\ sigue\ un\ patr\u00F3n\r\n\ en\ espiral,\ donde\ las\ celdas\ se\ colocan\ alrededor\ de\ un\ centro.\r\n\ \r\n\ Permite\:\r\n\ -\ Agregar\ y\ quitar\ tiendas\ en\ celdas\ espec\u00EDficas.\r\n\ -\ Agregar\ y\ quitar\ robots\ en\ celdas.\r\n\ -\ Mover\ robots\ entre\ celdas\ y\ simular\ compras\ en\ tiendas.\r\n\ -\ Reiniciar\ el\ sistema\ devolviendo\ robots\ a\ sus\ posiciones\ iniciales\ \r\n\ \ \ y\ reiniciando\ las\ tiendas.\r\n\ -\ Consultar\ ganancias,\ estado\ de\ la\ Silk\ Road\ y\ posiciones\ de\ robots\ y\ tiendas.\r\n\ -\ Mostrar/ocultar\ visualmente\ toda\ la\ espiral.\r\n\ -\ Finalizar\ el\ simulador.\r\n\ Ciclo\ 1.0\r\n
comment1.params=cantidadCeldas
comment1.target=SilkRoad(int)
comment1.text=\r\n\ Constructor\ que\ genera\ la\ espiral\ de\ celdas.\r\n\ Adem\u00E1s\ inicializa\ la\ barra\ de\ progreso\ global\ (ganancias)\ que\ se\ dibuja\ en\ la\ parte\ superior\ del\ canvas.\r\n\ @param\ cantidadCeldas\ n\u00FAmero\ total\ de\ celdas\ en\ la\ espiral\r\n
comment10.params=celdaIndex
comment10.target=void\ removeRobot(int)
comment10.text=\r\n\ Elimina\ el\ robot\ de\ la\ celda\ indicada\ (si\ existe).\r\n\ \ Despu\u00E9s\ de\ cada\ intento\ de\ compra,\ se\ actualiza\ la\ barra\ de\ progreso\ global.\r\n\ @param\ celdaIndex\ n\u00FAmero\ de\ celda\ \r\n
comment11.params=
comment11.target=void\ moveRobots()
comment11.text=\r\n\ Mueve\ todos\ los\ robots\ hacia\ adelante\ buscando\ la\ tienda\ m\u00E1s\ cercana\r\n\ que\ les\ d\u00E9\ ganancia\ positiva.\r\n\ Si\ no\ hay\ tienda\ adelante\ o\ no\ hay\ ganancia,\ el\ robot\ no\ se\ mueve.\r\n
comment12.params=celdaIndex\ pasos
comment12.target=void\ moveRobot(int,\ int)
comment12.text=\r\n\ Mueve\ todos\ los\ robots\ de\ una\ casilla\ espec\u00EDfica\ la\ cantidad\ de\ pasos\ indicada.\r\n\ Si\ un\ robot\ cae\ en\ una\ celda\ con\ tienda,\ autom\u00E1ticamente\ compra\ un\ producto\ (si\ hay\ stock).\r\n\ @param\ celdaIndex\ n\u00FAmero\ de\ la\ celda\ de\ origen\ (1-basado)\r\n\ @param\ pasos\ n\u00FAmero\ de\ casillas\ a\ avanzar\ (positivo)\ o\ retroceder\ (negativo)\r\n
comment13.params=
comment13.target=void\ reboot()
comment13.text=\r\n\ Reinicia\ el\ sistema\:\r\n\ -\ Devuelve\ los\ robots\ a\ sus\ posiciones\ iniciales.\r\n\ -\ Restablece\ las\ tiendas\ (stock\ y\ profit).\r\n\ -\ Actualiza\ la\ barra\ de\ progreso\ global.\r\n
comment14.params=
comment14.target=void\ returnRobots()
comment14.text=\r\n\ Devuelve\ \u00FAnicamente\ los\ robots\ a\ sus\ posiciones\ iniciales,\r\n\ sin\ afectar\ el\ estado\ de\ las\ tiendas.\r\n
comment15.params=
comment15.target=int\ porfit()
comment15.text=\r\n\ Consulta\ la\ ganancia\ total\ y\ el\ detalle\ de\ ganancias\ de\ cada\ robot.\r\n\ @return\ total\ acumulado\ de\ profits\r\n
comment16.params=
comment16.target=int[][]\ stores()
comment16.text=\r\n\ Obtiene\ las\ posiciones\ de\ todas\ las\ tiendas\ en\ la\ Silk\ Road.\r\n\ @return\ arreglo\ bidimensional\ con\ los\ n\u00FAmeros\ de\ celda\r\n
comment17.params=
comment17.target=int[][]\ emptiedStores()
comment17.text=\r\n\ Devuelve\ una\ lista\ de\ las\ tiendas\ y\ las\ veces\ que\ han\ sido\ desocupadas.\r\n\ Cada\ fila\ contiene\:\ [posici\u00F3nCelda,\ vecesDesocupada]\r\n\ El\ resultado\ se\ ordena\ por\ posici\u00F3n\ de\ celda\ en\ orden\ ascendente.\r\n\ @return\ matriz\ int[][]\ con\ la\ informaci\u00F3n\ de\ las\ tiendas\r\n
comment18.params=
comment18.target=int[][]\ robots()
comment18.text=\r\n\ Obtiene\ las\ posiciones\ de\ todos\ los\ robots\ en\ la\ Silk\ Road.\r\n\ @return\ arreglo\ bidimensional\ con\ los\ n\u00FAmeros\ de\ celda\r\n
comment19.params=
comment19.target=int[][]\ profitPerMove()
comment19.text=\r\n\ Devuelve\ las\ ganancias\ por\ movimiento\ de\ cada\ robot,\r\n\ ordenadas\ por\ posici\u00F3n\ de\ celda.\r\n\ Formato\:\ [location,\ profit_move_1,\ profit_move_2,\ ...]\r\n
comment2.params=days
comment2.target=SilkRoad(int[][])
comment2.text=\r\n\ Constructor\ que\ inicializa\ la\ SilkRoad\ usando\ la\ entrada\ del\ problema.\r\n\ @param\ days\ matriz\ donde\ cada\ fila\ representa\ un\ d\u00EDa\:\r\n\ \ \ \ \ \ \ \ -\ days[i][0]\ \=\ tipo\ (1\=robot,\ 2\=tienda)\r\n\ \ \ \ \ \ \ \ -\ days[i][1]\ \=\ posici\u00F3n\ de\ la\ celda\ (1-indexado)\r\n\ \ \ \ \ \ \ \ -\ days[i][2]\ \=\ cantidad\ de\ tenges\ (si\ es\ tienda,\ si\ no\ es\ 0)\r\n
comment20.params=
comment20.target=void\ makeVisible()
comment20.text=\r\n\ Hace\ visible\ toda\ la\ espiral.\r\n
comment21.params=
comment21.target=void\ makeInvisible()
comment21.text=\r\n\ Hace\ invisible\ toda\ la\ espiral.\r\n
comment22.params=
comment22.target=void\ finish()
comment22.text=\r\n\ Finaliza\ el\ simulador\ mostrando\ un\ mensaje\ de\ despedida\r\n\ y\ cierra\ la\ aplicaci\u00F3n.\r\n
comment3.params=
comment3.target=void\ blinkMaxProfitRobot()
comment3.text=\r\n\ Busca\ el\ robot\ con\ mayor\ ganancia\ en\ toda\ la\ Silk\ Road\r\n\ y\ lo\ hace\ parpadear.\r\n
comment4.params=days
comment4.target=int\ getMaxPosition(int[][])
comment4.text=\r\n\ M\u00E9todo\ auxiliar\ que\ obtiene\ la\ posici\u00F3n\ m\u00E1xima\ de\ la\ entrada.\r\n
comment5.params=
comment5.target=void\ updateProgressBar()
comment5.text=\r\n\ Actualiza\ la\ barra\ de\ progreso\ que\ representa\ las\ ganancias\ acumuladas\r\n\ de\ todas\ las\ tiendas\ respecto\ al\ m\u00E1ximo\ posible\ en\ ese\ momento.\r\n\ \r\n\ -\ El\ m\u00E1ximo\ posible\ se\ calcula\ como\:\ \r\n\ \ \ (precio\ \u00D7\ stock\ actual)\ +\ (ganancias\ ya\ acumuladas).\r\n\ -\ El\ ancho\ verde\ de\ la\ barra\ representa\ el\ porcentaje\ de\ ganancias\ logradas.\r\n\ -\ Si\ no\ hay\ tiendas\ o\ no\ existe\ un\ m\u00E1ximo\ posible\ (>\ 0),\ la\ barra\ se\ oculta\ (ancho\ 0).\r\n
comment6.params=celdaIndex\ price
comment6.target=void\ placeStore(int,\ int)
comment6.text=\ \r\n\ Agrega\ una\ tienda\ a\ la\ celda\ indicada\ con\ el\ precio\ especificado.\ \r\n\ Se\ le\ asigna\ un\ color\ aleatorio.\r\n\ @param\ celdaIndex\ n\u00FAmero\ de\ celda\ (1-basado)\r\n\ @param\ price\ precio\ de\ los\ productos\ de\ la\ tienda\r\n
comment7.params=celdaIndex
comment7.target=void\ removeStore(int)
comment7.text=\r\n\ Elimina\ la\ tienda\ de\ una\ celda\ espec\u00EDfica.\r\n\ Se\ actualiza\ la\ barra\ de\ progreso\ global\ para\ reflejar\ el\ cambio.\r\n\ @param\ celdaIndex\ n\u00FAmero\ de\ celda\r\n
comment8.params=
comment8.target=void\ resupplyStores()
comment8.text=\r\n\ Reabastece\ todas\ las\ tiendas\ con\ una\ cantidad\ de\ productos.\r\n\ Actualiza\ la\ barra\ de\ progreso\ global.\r\n
comment9.params=celdaIndex
comment9.target=void\ placeRobot(int)
comment9.text=\r\n\ Agrega\ un\ robot\ a\ la\ celda\ indicada,\ con\ color\ aleatorio,\r\n\ siempre\ y\ cuando\ la\ celda\ no\ tenga\ ya\ un\ robot.\r\n\ @param\ celdaIndex\ n\u00FAmero\ de\ celda\ (1-indexado)\r\n
numComments=23
